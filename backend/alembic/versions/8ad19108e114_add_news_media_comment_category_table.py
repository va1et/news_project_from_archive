"""add news, media, comment, category table

Revision ID: 8ad19108e114
Revises: 5898dcc968cc
Create Date: 2022-11-27 08:28:53.781521

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '8ad19108e114'
down_revision = '5898dcc968cc'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('category',
    sa.Column('guid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('guid'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_category_guid'), 'category', ['guid'], unique=True)
    op.create_table('news',
    sa.Column('guid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('likes', sa.Integer(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('guid')
    )
    op.create_index(op.f('ix_news_guid'), 'news', ['guid'], unique=True)
    op.create_table('comment',
    sa.Column('guid', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('user_guid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('news_guid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('text', sa.String(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['news_guid'], ['news.guid'], ),
    sa.ForeignKeyConstraint(['user_guid'], ['user.guid'], ),
    sa.PrimaryKeyConstraint('guid')
    )
    op.create_index(op.f('ix_comment_guid'), 'comment', ['guid'], unique=True)
    op.create_table('news_category',
    sa.Column('news_guid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('category_guid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.ForeignKeyConstraint(['category_guid'], ['category.guid'], ),
    sa.ForeignKeyConstraint(['news_guid'], ['news.guid'], )
    )
    op.drop_column('user', 'points')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user', sa.Column('points', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_table('news_category')
    op.drop_index(op.f('ix_comment_guid'), table_name='comment')
    op.drop_table('comment')
    op.drop_index(op.f('ix_news_guid'), table_name='news')
    op.drop_table('news')
    op.drop_index(op.f('ix_category_guid'), table_name='category')
    op.drop_table('category')
    # ### end Alembic commands ###
